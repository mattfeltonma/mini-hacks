{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The name of the Azure Key Vault"
            },
            "defaultValue": "kvdemo"
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "The tenant id the Key Vault instance will be created in"
            },
            "defaultValue": "[subscription().tenantId]"
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the resources"
            },
            "defaultValue": {
                "environment": "mi-demo"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        }
    },
    "variables": {
        "appInsightsAPiVersion": "2015-05-01",
        "keyVaultApiVersion": "2019-09-01",
        "storageApiVersion": "2019-06-01",
        "webApiVersion": "2020-12-01",
        "appInsightsName": "[concat('ai', parameters('uniqueData'))]",
        "appServiceKind": "Linux",
        "appServicePlanName": "[concat('sp-app', parameters('uniqueData'))]",
        "codeBranch": "master",
        "functionAppName": "[concat('func', parameters('uniqueData'))]",
        "functionAppPlanTier": "ElasticPremium",
        "functionAppPlanSkuName": "EP1",
        "functionAppKind": "functionapp,linux",
        "functionAppRuntime": "python",
        "keyVaultName": "[concat(parameters('keyVaultNamePrefix'), parameters('uniqueData'))]",
        "keyVaultSku": "Standard",
        "linuxFxVersion": "PYTHON|3.8",
        "repoUrl": "https://github.com/mattfeltonma/azure-function-example",
        "secretName": "samplesecret",
        "secretValue": "congratulations",
        "storageAccountName": "[concat('stfunc', parameters('uniqueData'))]",
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('storageAccountName')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "kind": "StorageV2",
            "dependsOn": [
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('functionAppName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "apiVersion": "[variables('appInsightsApiVersion')]",
            "name": "[variables('appInsightsName')]",
            "type": "microsoft.insights/components",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
            ],
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "[variables('webApiVersion')]",
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', variables('appInsightsName'))]"
            ],
            "sku": {
                "tier": "[variables('functionAppPlanTier')]",
                "name": "[variables('functionAppPlanSkuName')]"
            },
            "kind": "[variables('appServiceKind')]",

            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "[variables('webApiVersion')]",
            "name": "[variables('functionAppName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.insights/components', variables('appInsightsName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('storageAccountName'), 'default', variables('functionAppName'))]"
            ],
            "kind": "[variables('functionAppKind')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "[variables('functionAppRuntime')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "KEY_VAULT_NAME",
                            "value": "[variables('keyVaultName')]"
                        },
                        {
                            "name": "KEY_VAULT_SECRET_NAME",
                            "value": "[variables('secretName')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "apiVersion": "[variables('webApiVersion')]",
            "name": "[concat(variables('functionAppName'), '/web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "repoUrl": "[variables('repoUrl')]",
                "branch": "[variables('codeBranch')]",
                "isManualIntegration": true,
                "isGitHubAction": false,
                "deploymentRollbackEnabled": false,
                "isMercurial": false
            }
        },
        {
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "[variables('keyVaultApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', variables('functionAppName'),'/sourcecontrols/web')]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "accessPolicies": [
                ],
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": false,
                "enablePurgeProtection": true,
                "enableRbacAuthorization": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "sku": {
                    "family": "A",
                    "name": "[variables('keyVaultSku')]"
                },
                "tenantid": "[parameters('tenantId')]"
            }
        },
        {
            "name": "[concat(variables('keyVaultName'),'/',variables('secretName'))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "[variables('keyVaultApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "value": "[variables('secretValue')]"
            }
        }
    ],
    "outputs": {
    }
}